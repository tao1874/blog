(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{334:function(t,s,a){t.exports=a.p+"assets/img/monorepo.995dee1e.svg"},335:function(t,s,a){t.exports=a.p+"assets/img/monorepo-mutirepo.1423c412.svg"},336:function(t,s,a){t.exports=a.p+"assets/img/monorepo-flow.ed1143e9.svg"},337:function(t,s,a){t.exports=a.p+"assets/img/monorepo-g2.4ad24bdd.svg"},338:function(t,s,a){t.exports=a.p+"assets/img/monorepo-tools.b7b34200.svg"},379:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"从入门到实践：前端-monorepo-工程化实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从入门到实践：前端-monorepo-工程化实战"}},[t._v("#")]),t._v(" 从入门到实践：前端 Monorepo 工程化实战")]),t._v(" "),e("p",[t._v("随着前端项目的规模不断扩大，如何高效管理多个相关项目成为了一个棘手的问题。特别是当你的团队同时维护着多个共享相似技术栈的应用时，可能会遇到这些困扰：重复的依赖安装、繁琐的包发布流程、不一致的工具配置等。")]),t._v(" "),e("p",[t._v("本文将详细介绍如何使用 "),e("code",[t._v("Monorepo")]),t._v(" 来解决这些问题，我们会以实际项目为例，使用 "),e("code",[t._v("pnpm")]),t._v(" 和 "),e("code",[t._v("Turborepo")]),t._v(" 搭建一个高效的前端工程化方案。读完本文，你将了解：")]),t._v(" "),e("blockquote",[e("ul",[e("li",[e("code",[t._v("Monorepo")]),t._v(" 是什么，以及它如何解决传统多仓库的痛点")]),t._v(" "),e("li",[t._v("如何使用 "),e("code",[t._v("pnpm")]),t._v(" 管理项目依赖和工作空间")]),t._v(" "),e("li",[t._v("如何使用 "),e("code",[t._v("Turborepo")]),t._v(" 提升构建效率")]),t._v(" "),e("li",[t._v("实际项目中的最佳实践和注意事项")])])]),t._v(" "),e("h2",{attrs:{id:"什么是-monorepo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-monorepo"}},[t._v("#")]),t._v(" 什么是 Monorepo")]),t._v(" "),e("p",[t._v("在软件开发中，"),e("code",[t._v("Monorepo")]),t._v('（"mono"意为"单一"，"repo"是"存储库"的缩写）是一种策略，它将多个项目集中在一个代码仓库中进行管理。这些项目之间通常具有一定的联系，可以共享代码或依赖，以提高开发效率。\n'),e("img",{attrs:{src:a(334),alt:"monorepo"}})]),t._v(" "),e("h2",{attrs:{id:"monorepo-的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-的特点"}},[t._v("#")]),t._v(" Monorepo 的特点")]),t._v(" "),e("p",[e("code",[t._v("Monorepo")]),t._v(" 使用单一的代码仓库来管理多个项目：")]),t._v(" "),e("ul",[e("li",[t._v("项目之间可以通过本地依赖实现无缝共享。")]),t._v(" "),e("li",[t._v("提供统一的工具链，便于维护和协作。")])]),t._v(" "),e("p",[t._v("例如"),e("a",{attrs:{href:"https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext",target:"_blank",rel:"noopener noreferrer"}},[t._v("谷歌"),e("OutboundLink")],1),t._v("管理着一个庞大的 "),e("code",[t._v("Monorepo")]),t._v(" 库，包括大约 10 亿个文件，拥有约 3500 万次提交的历史，跨越了谷歌整个 18 年。[2016]")]),t._v(" "),e("h2",{attrs:{id:"对比传统的多仓库（multirepo）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对比传统的多仓库（multirepo）"}},[t._v("#")]),t._v(" 对比传统的多仓库（Multirepo）")]),t._v(" "),e("p",[t._v("下图展示了 "),e("code",[t._v("Multirepo")]),t._v(" 和 "),e("code",[t._v("Monorepo")]),t._v(" 的在代码仓库上区别")]),t._v(" "),e("p",[e("img",{attrs:{src:a(335),alt:"monorepo-vs-multirepo"}})]),t._v(" "),e("p",[t._v("在传统的多仓库结构中（"),e("code",[t._v("Multirepo")]),t._v("），每个项目独立维护，可能会面临以下问题：")]),t._v(" "),e("ol",[e("li",[t._v("代码共享困难\n为了共享代码，需要额外创建一个共享仓库并发布为包，增加了维护成本。")]),t._v(" "),e("li",[t._v("代码重复\n各项目可能会重复实现相同功能，导致冗余代码和后期维护困难。")]),t._v(" "),e("li",[t._v("工具不一致\n不同仓库可能使用不同的工具链（构建、部署、代码规范），增加了协作成本。")]),t._v(" "),e("li",[t._v("构建效率低\n每个项目独立安装依赖，可能会多次重复构建相同的内容。\n举个例子：\n我们之前的前端仓库下，有运维平台和租户平台，技术栈相差不多，相同的依赖会重复安装到磁盘上，分别维护各自的工具配置和公共组件，不仅导致代码重复，还让统一管理和协作变得复杂。")])]),t._v(" "),e("h2",{attrs:{id:"monorepo-的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-的优势"}},[t._v("#")]),t._v(" Monorepo 的优势")]),t._v(" "),e("p",[t._v("使用 "),e("code",[t._v("Monorepo")]),t._v("，以 "),e("code",[t._v("JavaScript")]),t._v(" 生态为例，可以解决以上问题：")]),t._v(" "),e("ol",[e("li",[t._v("代码共享简单\n在本地直接引用共享包，无需发布到 "),e("code",[t._v("npm")]),t._v(" 即可使用。")]),t._v(" "),e("li",[t._v("统一的工具链\n通过集中化管理代码规范（如 "),e("code",[t._v("eslint")]),t._v("、"),e("code",[t._v("typescript")]),t._v(" 等）和工具链，减少配置成本，保证一致性。")]),t._v(" "),e("li",[t._v("高效的构建流程\n减少重复安装依赖，利用缓存机制加速构建。")])]),t._v(" "),e("h2",{attrs:{id:"monorepo-在-web-开发领域中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-在-web-开发领域中"}},[t._v("#")]),t._v(" Monorepo 在 Web 开发领域中")]),t._v(" "),e("p",[t._v("现代 Web 开发中通常涉及前后端，随着使用 "),e("code",[t._v("JavaScript")]),t._v(" 全栈开发的流行，前后端代码和服务往往在同一个项目中协作。例如，"),e("code",[t._v("React")]),t._v("、"),e("code",[t._v("Vue")]),t._v(" 等前端框架和 "),e("code",[t._v("Node.js")]),t._v("、"),e("code",[t._v("GraphQL")]),t._v(" 等后端技术之间的交互性非常强，前后端复用类型、公共常量等等，这使得在同一个仓库中维护前后端代码变得更加高效。")]),t._v(" "),e("h2",{attrs:{id:"monorepo-的实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-的实践"}},[t._v("#")]),t._v(" Monorepo 的实践")]),t._v(" "),e("p",[t._v("我们在一个新项目中实施了 "),e("code",[t._v("Monorepo")]),t._v("，该项目包含了运维前端（"),e("code",[t._v("admin")]),t._v("）和租户前端（"),e("code",[t._v("tenant")]),t._v("），我们将和后端交互用的 "),e("code",[t._v("Api")]),t._v(" 抽象成一个独立的包。同时，我们两侧的技术栈基本一致，将相关工具的配置公共部分抽象成包，项目各自继承扩展，最后，我们将一些常用的常量、方法、"),e("code",[t._v("UI")]),t._v(" 组件抽象出来，单独管理。")]),t._v(" "),e("p",[t._v("按照我们以往多仓库（"),e("code",[t._v("Multirepo")]),t._v("）方式，这些包分布在各个独立的仓库里，然后将包发布到公司内部或者公开的源上项目中安装导入。这种方式就会产生我前面提到的多仓库的一个缺陷，代码共享困难，在这种模式下，更新共享包（如 "),e("code",[t._v("@org/api")]),t._v("）的流程通常包括以下步骤：")]),t._v(" "),e("ol",[e("li",[t._v("修改共享包代码")]),t._v(" "),e("li",[t._v("发布新版本")]),t._v(" "),e("li",[t._v("更新依赖该包的项目中的版本号")]),t._v(" "),e("li",[t._v("重新安装依赖")]),t._v(" "),e("li",[t._v("调试和验证")])]),t._v(" "),e("p",[t._v("这个过程不仅繁琐，还可能影响开发效率。虽然在开发模式下可以使用软链接（"),e("code",[t._v("symlink")]),t._v("）来实时查看效果，但这种方法仍需手动操作，且可能引入额外的复杂性。")]),t._v(" "),e("p",[e("code",[t._v("Monorepo")]),t._v(" 工具和现代依赖管理工具（如 "),e("code",[t._v("pnpm")]),t._v("、"),e("code",[t._v("Yarn")]),t._v("、"),e("code",[t._v("npm")]),t._v("）提供的 "),e("code",[t._v("Workspace")]),t._v(" 功能可以有效解决这些问题：")]),t._v(" "),e("ol",[e("li",[t._v("简化依赖管理：本地包可以直接被引用，无需发布和版本更新")]),t._v(" "),e("li",[t._v("即时生效：对共享包的修改可以立即反映在依赖它的项目中")]),t._v(" "),e("li",[t._v("统一构建：确保所有项目使用相同版本的共享包")]),t._v(" "),e("li",[t._v("简化工作流：减少了发布、更新和重新安装的步骤")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(336),alt:"monorepo-flow"}}),t._v("\n这种方法不仅提高了开发效率，还确保了项目间的一致性，是现代大型前端项目开发的推荐实践。")]),t._v(" "),e("h2",{attrs:{id:"workspace-设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#workspace-设置"}},[t._v("#")]),t._v(" Workspace 设置")]),t._v(" "),e("p",[t._v("通俗的说，"),e("code",[t._v("Workspace")]),t._v(" 就像一个大文件夹，里面分门别类放着多个小项目（应用）或共享的工具包（模块）。这些小项目和工具包之间可以相互联系，也可以独立运作。")]),t._v(" "),e("p",[t._v("在 "),e("code",[t._v("JavaScript")]),t._v(" 中，主流依赖管理工具均支持 "),e("code",[t._v("Workspace")]),t._v("，"),e("code",[t._v("pnpm")]),t._v(" 使用 "),e("code",[t._v("pnpm-workspace.yaml")]),t._v(" 配置。"),e("code",[t._v("npm")]),t._v(" 和 "),e("code",[t._v("Yarn")]),t._v("，使用 "),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("workspaces")]),t._v(" 字段配置。")]),t._v(" "),e("p",[t._v("我们选择 "),e("code",[t._v("pnpm")]),t._v(" 作为我们依赖管理工具，"),e("code",[t._v("pnpm-workspace.yaml")]),t._v(" 的内容如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('packages:\n  - "apps/*"\n  - "packages/*"\n')])])]),e("p",[t._v("根据上面的 "),e("code",[t._v("Workspace")]),t._v(" 配置，我们把所用的应用和包，放置在一个仓库里，仓库结构如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".\n├── apps\n│   ├── admin\n│   │   └── package.json\n│   └── tenant\n│       └── package.json\n├── package.json\n├── packages\n│   ├── api\n│   │   └── package.json\n│   ├── eslint-config\n│   │   └── package.json\n│   ├── shared\n│   │   └── package.json\n│   ├── typescript-config\n│   │   └── package.json\n│   └── ui\n│       └── package.json\n└── pnpm-lock.yaml\n\n")])])]),e("ul",[e("li",[t._v("应用（apps）：独立的项目（如前端、后端应用），通常相互隔离。在我们的项目中，"),e("code",[t._v("admin")]),t._v(" 和 "),e("code",[t._v("tenant")]),t._v(" 是两个基于 "),e("code",[t._v("React")]),t._v(" 的前端应用，用 "),e("code",[t._v("Vite")]),t._v(" 作为打包工具")]),t._v(" "),e("li",[t._v("包（packages）：共享的模块，我们项目中包括组件库（ui）、 前后端交互 "),e("code",[t._v("Api")]),t._v(" 、代码 lint 工具配置（eslint-config）等\n一个包可以是另外一个包的依赖，也可以是应用的依赖，比如 "),e("code",[t._v("eslint-config")]),t._v(" 包，可以被 "),e("code",[t._v("ui")]),t._v(" 和 "),e("code",[t._v("api")]),t._v(" 依赖，也可以被 "),e("code",[t._v("admin")]),t._v(" 和 "),e("code",[t._v("tenant")]),t._v(" 依赖")]),t._v(" "),e("li",[e("code",[t._v("package.json")]),t._v(" 文件：描述包的元数据，包括名称、版本号、依赖等，每个包或者应用"),e("em",[t._v("必须包含")])]),t._v(" "),e("li",[t._v("不要嵌套包或者应用，后续介绍到 "),e("code",[t._v("Monorepo")]),t._v(" 工具不支持")])]),t._v(" "),e("p",[t._v("下图展示了项目的依赖关系")]),t._v(" "),e("p",[e("img",{attrs:{src:a(337),alt:"monorepo-dependencies"}})]),t._v(" "),e("h3",{attrs:{id:"为什么选择-pnpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择-pnpm"}},[t._v("#")]),t._v(" 为什么选择 "),e("code",[t._v("pnpm")])]),t._v(" "),e("p",[t._v("节省磁盘空间和提升性能")]),t._v(" "),e("ul",[e("li",[t._v("独特的硬链接机制：")]),t._v(" "),e("li",[e("code",[t._v("pnpm")]),t._v(" 使用硬链接将依赖统一存储在全局缓存中，避免重复安装，节省磁盘空间。")]),t._v(" "),e("li",[e("code",[t._v("npm")]),t._v(" 每个项目都独立存储依赖，导致浪费磁盘空间，特别是在多项目环境下。")]),t._v(" "),e("li",[t._v("安装速度更快：")]),t._v(" "),e("li",[e("code",[t._v("pnpm")]),t._v(" 利用缓存机制显著加速依赖安装。")])]),t._v(" "),e("h2",{attrs:{id:"monorepo-tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#monorepo-tools"}},[t._v("#")]),t._v(" Monorepo tools")]),t._v(" "),e("p",[t._v("设置完 "),e("code",[t._v("Workspace")]),t._v(" 后，我们可以很方便的共享代码，但是还有一个问题：就是任务管理，比如你要构建应用 "),e("code",[t._v("admin")]),t._v("，你先要构建其依赖 "),e("code",[t._v("@org/ui")]),t._v("，而 "),e("code",[t._v("@org/ui")]),t._v(" 又依赖 "),e("code",[t._v("@org/api")]),t._v("，此外还要考虑并行构建 "),e("code",[t._v("tenant")]),t._v(" 加快构建速度。这些复杂的任务管理，需要一个工具支持。一个优秀的 "),e("code",[t._v("Monorepo")]),t._v(" 工具通要常具备以下能力：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(338),alt:"monorepo-tools"}})]),t._v(" "),e("ol",[e("li",[t._v("本地计算缓存\n未改变的文件跳过重复构建，提升效率。")]),t._v(" "),e("li",[t._v("任务编排\n确保任务按依赖顺序执行，例如在构建应用前，先构建其依赖包。")]),t._v(" "),e("li",[t._v("分布式计算缓存\n允许开发环境和测试环境共享构建缓存（视具体条件实现）。")]),t._v(" "),e("li",[t._v("分布式任务执行\n支持在多台机器上并行运行任务，缩短构建时间。")]),t._v(" "),e("li",[e("code",[t._v("Workspace")]),t._v(" 分析\n提供项目全貌，帮助开发人员快速理解代码结构。")]),t._v(" "),e("li",[t._v("依赖可视化\n直观展示项目和任务的依赖关系。")])]),t._v(" "),e("p",[t._v("目前有很多开源的 "),e("code",[t._v("Monorepo")]),t._v(" 工具")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Bazel")]),t._v(": by "),e("code",[t._v("Google")]),t._v("，支持多语言，公司级的工程化工具，非常复杂")]),t._v(" "),e("li",[e("code",[t._v("Lerna")]),t._v(": "),e("code",[t._v("JavaScript")]),t._v(" 社区曾经最流行的工具，后面一段时间作者停止维护了，现在由 "),e("code",[t._v("Nx")]),t._v(" 团队维护")]),t._v(" "),e("li",[e("code",[t._v("Nx")]),t._v(": 号称下一代构建系统，对 "),e("code",[t._v("monorepo")]),t._v(" 的支持很好，支持插件、高级持续集成配置，包括缓存和分布式执行任务，功能相对完善")]),t._v(" "),e("li",[e("code",[t._v("Turborepo")]),t._v(": 一个由 "),e("code",[t._v("Vercel")]),t._v(" 团队开发的新 "),e("code",[t._v("Monorepo")]),t._v(" 工具，用 "),e("code",[t._v("Rust")]),t._v(" 编写，用于 "),e("code",[t._v("JavaScript/TypeScript")]),t._v(" 开发")])]),t._v(" "),e("p",[e("code",[t._v("Bazel")]),t._v(" 适合大型组织，"),e("code",[t._v("Lerna")]),t._v(" 专注包管理，可以被包管理工具（"),e("code",[t._v("pnpm")]),t._v("）代替，"),e("code",[t._v("Nx")]),t._v(" 功能更加强大，相对的学习路线比较陡峭，"),e("code",[t._v("Turborepo")]),t._v(" 简单易用，比较适合我们的需求")]),t._v(" "),e("h2",{attrs:{id:"turborepo-安装配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#turborepo-安装配置"}},[t._v("#")]),t._v(" Turborepo 安装配置")]),t._v(" "),e("p",[e("code",[t._v("Turborepo")]),t._v(" 是运行在 "),e("code",[t._v("Workspaces")]),t._v(" 上层，我们已经用 "),e("code",[t._v("pnpm")]),t._v(" 配置好了 "),e("code",[t._v("Workspace")]),t._v("，下面开始安装配置 "),e("code",[t._v("Turborepo")]),t._v("，这是简化步骤，更多细节参考文档 "),e("a",{attrs:{href:"https://turbo.build/repo/docs/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("getting-started"),e("OutboundLink")],1)]),t._v(" "),e("ol",[e("li",[t._v("安装，可以选择全局安装或者安装到项目中")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Global install")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" turbo --global\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install in repository")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" turbo --save-dev --workspace-root\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("添加配置文件 "),e("code",[t._v("turbo.json")]),t._v("，参考文档"),e("a",{attrs:{href:"https://turbo.build/repo/docs/reference/configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Configuration Options"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tasks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependsOn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^build"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist/**"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"persistent"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cache"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("dependsOn")]),t._v(" 字段，任务开始前必须完成的任务。用法参考"),e("a",{attrs:{href:"https://turbo.build/repo/docs/crafting-your-repository/configuring-tasks",target:"_blank",rel:"noopener noreferrer"}},[t._v("configuring-tasks"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("outputs")]),t._v(" 字段，任务的输出，不指定，"),e("code",[t._v("turbo")]),t._v(" 就不会缓存，"),e("code",[t._v("turbo")]),t._v(" 会在本地缓存构建，如果某个依赖或者应用没有更改，"),e("code",[t._v("turbo")]),t._v(" 就不会重新构建。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("项目根目录下 "),e("code",[t._v("package.json")]),t._v(" 添加脚本等")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('+  "scripts": {\n+    "build": "turbo build",\n+    "dev": "turbo dev",\n+    "lint": "turbo lint"\n+  },\n+  "packageManager": "pnpm@9.1.2",\n')])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("运行任务，参考"),e("a",{attrs:{href:"https://turbo.build/repo/docs/crafting-your-repository/running-tasks",target:"_blank",rel:"noopener noreferrer"}},[t._v("running-tasks"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"turborepo-常见问题和解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#turborepo-常见问题和解决方案"}},[t._v("#")]),t._v(" Turborepo 常见问题和解决方案")]),t._v(" "),e("p",[t._v("在使用 "),e("code",[t._v("Turborepo")]),t._v(" 的过程中，你可能会遇到以下常见问题：")]),t._v(" "),e("h4",{attrs:{id:"_1-缓存相关问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-缓存相关问题"}},[t._v("#")]),t._v(" 1. 缓存相关问题")]),t._v(" "),e("p",[e("strong",[t._v("问题")]),t._v(": 明明代码没有改变，但 "),e("code",[t._v("Turborepo")]),t._v(" 没有使用缓存，每次都重新构建\n"),e("strong",[t._v("解决方案")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("检查 "),e("code",[t._v("turbo.json")]),t._v(" 中的 "),e("code",[t._v("outputs")]),t._v(" 配置是否正确指定了所有输出文件")]),t._v(" "),e("li",[t._v("确保 "),e("code",[t._v("package.json")]),t._v(" 中的 "),e("code",[t._v("scripts")]),t._v(" 命令是确定性的，不包含随机性（如时间戳）")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("turbo build --dry")]),t._v(" 命令查看任务的依赖关系和缓存状态")])]),t._v(" "),e("p",[e("strong",[t._v("问题")]),t._v(": 想要强制清除缓存重新构建\n"),e("strong",[t._v("解决方案")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行时跳过缓存")]),t._v("\nturbo build --force\n")])])]),e("h4",{attrs:{id:"_2-任务编排问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-任务编排问题"}},[t._v("#")]),t._v(" 2. 任务编排问题")]),t._v(" "),e("p",[e("strong",[t._v("问题")]),t._v(": 任务执行顺序不符合预期\n"),e("strong",[t._v("解决方案")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tasks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependsOn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^build"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ^表示依赖项的build任务")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dist/**"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependsOn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依赖当前包的build任务")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputs"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("strong",[t._v("问题")]),t._v(": 开发时某些任务不需要缓存\n"),e("strong",[t._v("解决方案")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tasks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cache"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"persistent"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"_3-调试技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-调试技巧"}},[t._v("#")]),t._v(" 3. 调试技巧")]),t._v(" "),e("ul",[e("li",[t._v("使用 "),e("code",[t._v("turbo run build --graph")]),t._v(" 生成任务依赖图，帮助理解和优化任务流")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("--dry")]),t._v(" 参数预览任务执行计划："),e("code",[t._v("turbo build --dry")])]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("TURBO_LOG_VERBOSITY=high")]),t._v(" 环境变量查看详细日志")])]),t._v(" "),e("h2",{attrs:{id:"如何开发一个包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何开发一个包"}},[t._v("#")]),t._v(" 如何开发一个包")]),t._v(" "),e("p",[t._v("开发一个包，共享给应用或者其他的包，是 "),e("code",[t._v("Monorepo")]),t._v(" 的核心功能")]),t._v(" "),e("h3",{attrs:{id:"基础代码规范配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础代码规范配置"}},[t._v("#")]),t._v(" 基础代码规范配置")]),t._v(" "),e("p",[e("code",[t._v("@org/eslint-config")]),t._v(" 是我们项目的基本的 "),e("code",[t._v("eslint")]),t._v(" 配置，我们希望每个包和应用，不各自再维护这么基础的配置，统一使用 "),e("code",[t._v("@org/eslint-config")]),t._v("，保证团队项目的代码风格一致，这个包不需要构建和开发等任务，包含你定义的文件即可")]),t._v(" "),e("p",[e("em",[t._v("/packages/eslint-config/package.json")]),t._v(" 部分内容如下")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@org/eslint-config"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"private"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-internal.js"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("library.js")]),t._v(" 用于纯 "),e("code",[t._v("JavaScript")]),t._v(" 项目，"),e("code",[t._v("react-internal.js")]),t._v(" 用于 "),e("code",[t._v("React")]),t._v(" 项目，如何使用呢？比如在 "),e("code",[t._v("admin")]),t._v(" 项目中")]),t._v(" "),e("p",[t._v("首先在 "),e("em",[t._v("/apps/admin/package.json")]),t._v(" 添加依赖")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@org/eslint-config"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"workspace:*"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("workspace:* 表示从你的 "),e("code",[t._v("Workspace")]),t._v(" 中引用，不必从网络上获取，等到这些包发布的时候，会被动态的替换为对应的版本号。\n然后在 /apps/admin/.eslintrc 中引用")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@org/eslint-config/react-internal.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这样在 "),e("code",[t._v("admin")]),t._v(" 项目中，就可以使用 "),e("code",[t._v("@org/eslint-config")]),t._v(" 的配置，其他应用或者包同理，大家基于同一个代码规范配置开发，不必各自维护自己的代码规范配置")]),t._v(" "),e("h3",{attrs:{id:"前后端交互-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前后端交互-api"}},[t._v("#")]),t._v(" 前后端交互 Api")]),t._v(" "),e("p",[t._v("这个包包含前后端交互的所有 "),e("code",[t._v("Api")]),t._v("，底层基于 "),e("code",[t._v("HTTP")]),t._v(" 请求工具 "),e("code",[t._v("Axios")]),t._v("。这个包不仅要导出出各个模块的交互用的 "),e("code",[t._v("Api")]),t._v(" 函数，还要包含 "),e("code",[t._v("JSON")]),t._v(" 响应的类型 "),e("code",[t._v("Model")]),t._v("，此外后端返回的数据，不可能包含 "),e("code",[t._v("UI")]),t._v(" 上需要的所有信息，特别是一些枚举值的映射，我们的做法是维护在前端和类型 "),e("code",[t._v("Model")]),t._v("，一起都由 "),e("code",[t._v("Api")]),t._v(" 这个包导出")]),t._v(" "),e("p",[e("em",[t._v("/packages/api/package.json")]),t._v(" 部分内容如下")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@org/api"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"private"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc --watch"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsc"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/index.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"types"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/index.d.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exports"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"./user"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"types"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/user/user.d.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/user/user.js"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"./order"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"types"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/order/order.d.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./dist/order/order.js"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("推荐用 "),e("code",[t._v("package.json")]),t._v(" 的 "),e("code",[t._v("exports")]),t._v(" 字段定义导出，使用的时候和 "),e("code",[t._v("@org/eslint-config")]),t._v(" 一样，先在 /apps/admin/package.json 添加依赖，然后在代码中引入，示例如下")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fetchUser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@org/api/module1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"我的-monorepo-实践心得"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#我的-monorepo-实践心得"}},[t._v("#")]),t._v(" 我的 Monorepo 实践心得")]),t._v(" "),e("p",[t._v("在使用 "),e("code",[t._v("Monorepo")]),t._v(" 的过程中，我总结了一些个人经验和思考，希望能给大家一些参考：")]),t._v(" "),e("h3",{attrs:{id:"从小规模开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从小规模开始"}},[t._v("#")]),t._v(" 从小规模开始")]),t._v(" "),e("p",[t._v("刚开始接触 "),e("code",[t._v("Monorepo")]),t._v(" 时，我也被各种工具和配置搞得有点晕。后来我意识到，与其一开始就追求完美的工程配置，不如从小规模开始尝试。我的建议是：")]),t._v(" "),e("ol",[e("li",[t._v("把最常用的共享代码先抽出来")]),t._v(" "),e("li",[t._v("随着项目发展，逐步完善工程化配置")])]),t._v(" "),e("p",[t._v("这样循序渐进的方式，让团队有足够的时间适应这种新的开发模式。")]),t._v(" "),e("h3",{attrs:{id:"意想不到的收益"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#意想不到的收益"}},[t._v("#")]),t._v(" 意想不到的收益")]),t._v(" "),e("p",[t._v("除了预期中的代码复用和工程化统一，"),e("code",[t._v("Monorepo")]),t._v(" 还带来了一些意想不到的好处：")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("更容易进行全局重构")])]),t._v(" "),e("ul",[e("li",[t._v("重构时能确保所有项目同步更新 ，比如你重构了一个 "),e("code",[t._v("@org/api")]),t._v(" 里请求的方法名称，所有导入的地方都会自动更新")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("团队协作更顺畅")])]),t._v(" "),e("ul",[e("li",[t._v("团队成员之间更容易共享最佳实践，比如我们项目中常用的增删改查页面，可以抽离出来，供团队成员共享")])])])]),t._v(" "),e("h3",{attrs:{id:"需要注意的坑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需要注意的坑"}},[t._v("#")]),t._v(" 需要注意的坑")]),t._v(" "),e("p",[t._v("当然，使用 "),e("code",[t._v("Monorepo")]),t._v(" 也不是没有挑战：")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("仓库体积增长以及权限管理")])]),t._v(" "),e("ul",[e("li",[t._v("代码都在一个仓库，对所有人都可见，这是 "),e("code",[t._v("Monorepo")]),t._v(" 的特点，但是有时存在有的应用或者包对某些团队不可见，就需要权限的管理")]),t._v(" "),e("li",[t._v("随着时间的增长，整个仓库体积会越来越大，检出仓库会有性能问题")]),t._v(" "),e("li",[t._v("我们仓库较小，没有遇到以上问题，但是这些都是客观存在的，需要考虑")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("包的边界划分")])]),t._v(" "),e("ul",[e("li",[t._v("不要过度拆分包，这可能会带来不必要的复杂性，比如接口的 "),e("code",[t._v("JSON")]),t._v(" 响应类型，我曾计划拆分一个 "),e("code",[t._v("@org/types")]),t._v(" 的包，相当于类型和接口分开了，考虑到我们规模小，写在一起简单方便。")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);